openapi: "3.0.0"
info:
  title: "stream-channel-api"
  version: "1.0.0"
paths:
  /accounts:
    post:
      summary: アカウント登録
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: アカウント登録に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authentication
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /guest-login:
    post:
      summary: ゲストユーザーとして簡単にログイン
      security: []
      responses:
        '200':
          description: Successful guest login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authentication
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /login:
    post:
      summary: メールアドレスとパスワードを使って認証
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: ログインに成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authentication
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /streams/{stream_id}:
    get:
      summary: 1つの配信情報を得る
      parameters:
          - name: stream_id
            in: path
            description: 配信ID
            required: true
            schema:
              type: string
          - name: platforms
            in: query
            description: 配信がアップロードされているプラットフォーム
            required: true
            schema:
              type: string
      responses:
        '200':
          description: リクエストに成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_detail'

        '404':
          description: 配信が見つからなかった
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Stream not found
                  message:
                    type: string
                    example: The stream with ID 'stream_id' was not found.
  /streams/{stream_id}/ratings:
    post:
      summary: 指定された配信の評価を行う
      parameters:
        - in: path
          name: stream_id
          description: 評価する配信のID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  properties:
                    good:
                      type: boolean
                      example: true
                    bad:
                      type: boolean
                      example: false
      responses:
        '200':
          description: 評価が成功しました
        '404':
          description: 指定された配信が見つかりません
        '500':
          description: サーバーエラーが発生しました
  /streams/{stream_id}/comments:
    post:
      summary: 指定された配信にコメントをする
      parameters:
        - in: path
          name: stream_id
          description: コメントを付ける配信のID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: 配信に付けるコメント
      responses:
        '201':
          description: コメントが追加されました
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 追加成功のメッセージ
        '400':
          description: リクエストが無効です
        '404':
          description: 指定された配信が見つかりません
        '500':
          description: サーバーエラーが発生しました
  /search/streams:
    get:
      summary: キーワードとタグで配信を検索（ページネーション付き）
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Keyword for searching streams
        - in: query
          name: tags
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          description: Tags for filtering streams
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
          description: Page number of results
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: Number of items per page
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentPage:
                    type: integer
                    example: 2
                    description: Current page number
                  totalItems:
                    type: integer
                    example: 55
                    description: Total number of items matching the search criteria
                  totalPages:
                    type: integer
                    example: 3
                    description: Total number of pages
                  itemsPerPage:
                    type: integer
                    example: 20
                    description: Number of items per page
                  streams:
                    type: array
                    items:
                      $ref: '#/components/schemas/stream_rough'
        '400':
          description: 不正なリクエスト
  /categories:
    get:
      summary: 自分のアカウントの配信者カテゴリ一覧を取得する
      responses:
        '200':
          description: カテゴリ一覧の取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/streamer_categories_rough'
        '404':
          description: 指定されたユーザーが見つかりません
        '500':
          description: サーバーエラーが発生しました
    post:
      summary: 新しい配信者カテゴリを作成する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 新しいカテゴリのタイトル
      responses:
        '201':
          description: カテゴリの作成に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 作成されたカテゴリのID
                  title:
                    type: string
                    description: 作成されたカテゴリのタイトル
        '400':
          description: バリデーションエラー
        '500':
          description: サーバーエラー
  /recommended-categories:
    get:
      summary: 'おすすめの配信者カテゴリ一覧を取得する'
      responses:
        '200':
          description: カテゴリ一覧の取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/streamer_categories_rough'

        '500':
          description: サーバーエラーが発生しました
  /categories/{category_id}:
    get:
      summary: カテゴリ中の配信者一覧を取得する
      parameters:
        - in: path
          name: category_id
          description: 配信者カテゴリのID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 配信者カテゴリの内容の取得に成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/streamer_categories_detail'
        '404':
          description: 指定されたカテゴリが見つかりません
        '500':
          description: サーバーエラーが発生しました
    delete:
      summary: 配信者カテゴリを削除する
      parameters:
        - in: path
          name: category_id
          required: true
          schema:
            type: string
            description: 削除するカテゴリのID
      responses:
        '204':
          description: カテゴリの削除に成功しました
        '404':
          description: 指定されたIDのカテゴリが見つかりません
        '500':
          description: サーバーエラー
    post:
      summary: 配信者をカテゴリに追加する
      parameters:
        - in: path
          name: category_id
          required: true
          schema:
            type: string
            description: カテゴリのID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                streamer_url:
                  type: string
                  description: 追加する配信者のURL
      responses:
        '201':
          description: 配信者の追加に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 追加された配信者のID
                  category_id:
                    type: string
                    description: 追加された配信者のカテゴリID
                  streamer_url:
                    type: string
                    description: 追加された配信者のURL
        '404':
          description: 指定されたIDのカテゴリが見つかりません
        '500':
          description: サーバーエラー
  /categories/{category_id}/streamers/{streamer_id}:
    delete:
      summary: 配信者をカテゴリから削除する
      parameters:
        - in: path
          name: category_id
          required: true
          schema:
            type: string
            description: カテゴリのID
        - in: path
          name: streamer_id
          required: true
          schema:
            type: string
            description: 配信者のID
      responses:
        '204':
          description: 配信者の削除に成功しました
        '404':
          description: 指定されたIDのカテゴリまたは配信者が見つかりません
        '500':
          description: サーバーエラー
  /categories/{category_id}/share:
    put:
      summary: 配信者カテゴリを共有状態にする
      parameters:
        - in: path
          name: category_id
          required: true
          schema:
            type: string
            description: カテゴリのID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                share:
                  type: boolean
                  description: 共有状態の設定
      responses:
        '200':
          description: 共有状態が更新されました
        '404':
          description: 指定されたIDのカテゴリが見つかりません
        '500':
          description: サーバーエラー
  /streamer/{streamer_id}:
    get:
      summary: 1つの配信者情報を取得する
      parameters:
        - in: path
          name: streamer_id
          description: 配信者のID
          required: true
          schema:
            type: string
      responses:
          '200':
            description: 配信者情報の取得に成功しました
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 配信者のID
                    name:
                      type: string
                      description: 配信者の名前
                    url:
                      type: string
                      description: 配信者のURL
                    platform:
                      type: string
                      description: 配信プラットフォーム名
                    followed:
                      type: boolean
                      description: 配信者を自分のカテゴリに追加しているか
                    streams:
                      $ref : '#/components/schemas/stream_rough'
                    streamer_icon:
                      type: string
                      format: base64
          '404':
            description: 指定された配信者が見つかりません
          '500':
            description: サーバーエラーが発生しました
  /streamer/{streamer_id}/comments:
    get:
      summary: 配信者についたコメント一覧を取得する
      parameters:
        - in: path
          name: streamer_id
          required: true
          schema:
            type: string
            description: 配信者のID
      responses:
        '200':
          description: 配信者についたコメントの一覧を取得しました
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: コメントのID
                    text:
                      type: string
                      description: コメントのテキスト
        '404':
          description: 指定されたIDの配信者が見つかりません
        '500':
          description: サーバーエラー
    post:
      summary: 配信者にコメントを付ける
      parameters:
        - in: path
          name: streamer_id
          required: true
          schema:
            type: string
            description: 配信者のID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: コメントの本文
      responses:
        '201':
          description: コメントが正常に追加されました
        '400':
          description: リクエストが不正です
        '404':
          description: 指定されたIDの配信者が見つかりません
        '500':
          description: サーバーエラー
  /streamer/{streamer_id}/analytics:
    get:
      summary: 配信者の分析データを取得
      parameters:
        - in: path
          name: streamer_id
          required: true
          description: ID of the streamer to retrieve analytics data for
          schema:
            type: string
      responses:
        '200':
          description: Successful response with analytics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  basic_info:
                    type: object
                    properties:
                      total_views:
                        type: integer
                        description: Total views of the streamer's content
                        example: 2,000,000,000
                      subscribers:
                        type: integer
                        description: Number of subscribers to the streamer's channel
                        example: 3,453,200
                  ratings:
                    $ref : '#/components/schemas/ratings'
                  audience_demographics:
                    $ref : '#/components/schemas/audience_demographics'
                  streamer_attributes:
                    type: array
                    items:
                      type: string
                      description: List of attributes associated with the streamer
                      example: ["ホラーゲーム", "カラオケ", "APEX"]
    post:
      summary: 配信者の分析データを投稿する
      parameters:
        - in: path
          name: streamer_id
          required: true
          description: ID of the streamer to post analytics data for
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                age:
                  type: integer
                  description: 投稿者ユーザーの年齢
                  example: 23
                gender:
                  type: string
                  enum: [male, female, other]
                  description: 投稿者ユーザーの性別
                ratings:
                    $ref : '#/components/schemas/ratings'
      responses:
        '201':
          description: 分析データの投稿に成功しました
        '400':
          description: 不正なリクエストです
  /playlists:
    get:
      summary: 自分のアカウントのプレイリスト一覧を取得する
      responses:
        '200':
          description: プレイリスト一覧を取得しました
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/playlist_rough'
        '404':
          description: 指定されたIDのユーザーが見つかりません
        '500':
          description: サーバーエラー
    post:
      summary: 新しいプレイリストを作成する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: プレイリストのタイトル
      responses:
        '201':
          description: プレイリストが正常に作成されました
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 新しいプレイリストのID
                  title:
                    type: string
                    description: 新しいプレイリストのタイトル
        '400':
          description: リクエストが無効です
        '500':
          description: サーバーエラー
  /recommended-playlists:
    get:
      summary: おすすめのプレイリスト一覧を取得する
      responses:
        '200':
          description: プレイリスト一覧を取得しました
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/playlist_rough'
        '404':
          description: 指定されたIDのユーザーが見つかりません
        '500':
          description: サーバーエラー
  /playlists/{playlist_id}:
    get:
      summary: 指定されたプレイリスト中の配信一覧を取得する
      parameters:
        - in: path
          name: playlist_id
          required: true
          schema:
            type: string
            description: プレイリストのID
      responses:
        '200':
          description: 指定されたプレイリスト中の配信一覧を取得しました
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/playlist_detail'
        '404':
          description: 指定されたIDのプレイリストが見つかりません
        '500':
          description: サーバーエラー
    post:
      summary: プレイリストに配信を追加する
      parameters:
        - in: path
          name: playlist_id
          required: true
          description: プレイリストのID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream_url:
                  type: string
                  description: 追加する配信
      responses:
        '200':
          description: プレイリストに配信が正常に追加されました
          content:
            application/json:
              schema:
                type: object
                properties:
                  playlist_id:
                    type: string
                    description: プレイリストのID
                  stream_url:
                    type: string
                    description: 追加された配信のURL
        '400':
          description: リクエストが無効です
        '404':
          description: 指定されたプレイリストが見つかりませんでした
        '500':
          description: サーバーエラー
    delete:
      summary: プレイリストを削除する
      parameters:
        - in: path
          name: playlist_id
          required: true
          description: プレイリストのID
          schema:
            type: string
      responses:
        '204':
          description: プレイリストが正常に削除されました
        '404':
          description: 指定されたプレイリストが見つかりませんでした
        '500':
          description: サーバーエラー
  /playlists/{playlist_id}/streams/{stream_id}:
    delete:
      summary: プレイリストから配信を削除する
      parameters:
        - in: path
          name: playlist_id
          required: true
          description: プレイリストのID
          schema:
            type: string
        - in: path
          name: stream_id
          required: true
          description: 配信のID
          schema:
            type: string
      responses:
        '204':
          description: 配信がプレイリストから正常に削除されました
        '404':
          description: 指定されたプレイリストまたは配信が見つかりませんでした
        '500':
          description: サーバーエラー
  /playlists/{playlist_id}/share:
    put:
      summary: プレイリストの共有状態を変更する
      parameters:
        - in: path
          name: playlist_id
          required: true
          description: プレイリストのID
          schema:
            type: string
      requestBody:
        required: true
        description: 共有状態を変更するためのデータ
        content:
          application/json:
            schema:
              type: object
              properties:
                share:
                  type: boolean
                  description: プレイリストの共有状態(true=共有, false=非共有)
      responses:
        '200':
          description: プレイリストの共有状態が正常に変更されました
        '400':
          description: リクエストが無効です
        '404':
          description: 指定されたプレイリストが見つかりませんでした
        '500':
          description: サーバーエラー
components:
  schemas:
      stream_rough:
        type: object
        properties:
          id:
            type: string
            example: "v12345"
            description: Stream ID
          title:
            type: string
            example: "Stream 1"
            description: Title of the stream
          views:
            type: string
            example: "34002"
            description: Number of views
          tags:
            type: array
            items:
              type: string
              example: ["tag1", "tag3"]
            description: Tags associated with the stream
          platform:
            type: string
            example: "YouTube"
            description: Platform where the stream is hosted
          thumbnail_image:
            type: string
            format: base64

      stream_detail:
        type: object
        properties:
          id:
            type: string
            example: "v12345"
            description: Stream ID
          url:
            type: string
            format: uri
            example: "https://example.com/stream1"
            description: URL of the stream
          title:
            type: string
            example: "Stream 1"
            description: Title of the stream
          views:
            type: string
            example: "34002"
            description: Number of views
          streamer:
            type: object
            properties:
              id:
                type: string
                description: 配信者のID
              name:
                type: string
                description: 配信者の名前
              platform:
                type: string
                description: 配信プラットフォーム名
              streamer_icon:
                type: string
                format: base64
                description: 配信者のアイコン
          rating:
            properties:
              good:
                type: boolean
                example: true
              bad:
                type: boolean
                example: false
          tags:
            type: array
            items:
              type: string
              example: ["tag1", "tag3"]
            description: Tags associated with the stream
          platform:
            type: string
            example: "YouTube"
            description: Platform where the stream is hosted
          comments:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: コメントID
                comment_text:
                  type: string
                  description: コメント本文
          thumbnail_image:
            type: string
            format: base64

      streamer_categories_rough:
          type: object
          properties:
            categories:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: カテゴリのID
                  name:
                    type: string
                    description: カテゴリの名前

      streamer_categories_detail:
        type: object
        properties:
          category_id:
            type: string
            description: カテゴリのID
          category_name:
            type: string
            description: カテゴリの名前
          streamers:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: 配信者のID
                name:
                  type: string
                  description: 配信者の名前
                platform:
                  type: string
                  description: 配信プラットフォーム名
                streamer_icon:
                  type: string
                  format: base64
                  description: 配信者のアイコン
                most_recent_stream_thumbnail:
                  type: string
                  format: base64
                  description: この配信者の直近の配信のサムネイル

      playlist_rough:
        type: object
        properties:
          playlists:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: プレイリストのID
                name:
                  type: string
                  description: プレイリストの名前

      playlist_detail:
        type: object
        properties:
          playlist_id:
            type: string
            description: プレイリストのID
          playlist_name:
            type: string
            description: プレイリストの名前
          streams:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: 配信のID
                url:
                  type: string
                  description: 配信のURL
                title:
                  type: string
                  description: 配信のタイトル
                views:
                  type: string
                  description: 配信の視聴数
                tags:
                  type: array
                  items:
                    type: string
                  description: 配信に関連するタグ一覧
                platform:
                  type: string
                  description: 配信のプラットフォーム
                thumbnail_image:
                  type: string
                  format: base64
                addedAt:
                  type: string
                  format: date-time
                  description: 配信がプレイリストに追加された日時

      ratings:
        type: object
        properties:
          humor:
            type: number
            description: 面白さ
            example: 2.2
          gaming_skill:
            type: number
            description: ゲームの上手さ
            example: 3.4
          appearance:
            type: number
            description: 外見の良さ
            example: 4.2
          uniqueness:
            type: number
            description: 独自性
            example: 1.2
          collaboration_frequency:
            type: number
            description: コラボ配信の頻度
            example: 5.0
          streaming_frequency:
            type: number
            description: 配信の頻度
            example: 3.3
          game_or_chat:
            type: number
            description: 5に近いほどゲーム中心で、1に近いほど雑談中心
            example: 2.2
          wholesomeness:
            type: number
            description: 配信者のイメージが健全かどうか
            example: 4.1

      audience_demographics:
        type: object
        properties:
          10s_male:
            type: number
            description: 10代男性の視聴者数
            example: 8
          20s_male:
            type: number
            description: 20代男性の視聴者数
            example: 23
          30s_male:
            type: number
            description: 30代男性の視聴者数
            example: 31
          40s_male:
            type: number
            description: 40代男性の視聴者数
            example: 24
          50s_male:
            type: number
            description: 50代男性の視聴者数
            example: 7
          60s_over_male:
            type: number
            description: 60代以上の男性の視聴者数
            example: 8
          10s_female:
            type: number
            description: 10代女性の視聴者数
            example: 1
          20s_female:
            type: number
            description: 20代女性の視聴者数
            example: 8
          30s_female:
            type: number
            description: 30代女性の視聴者数
            example: 12
          40s_female:
            type: number
            description: 40代女性の視聴者数
            example: 5
          50s_female:
            type: number
            description: 50代女性の視聴者数
            example: 0
          60s_over_female:
            type: number
            description: 60代以上の女性の視聴者数
            example: 0

      ErrorResponse:
        type: object
        properties:
          error:
            type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []